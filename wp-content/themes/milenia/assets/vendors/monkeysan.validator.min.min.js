var Validator=function(){function a(e,d){for(var f in d){d.hasOwnProperty(f)&&(e[f]=d[f])}return e}function b(c){this.errors=[];this.defOptions={form:null,cssPrefix:null,incorrectClass:"incorrect",correctClass:"valid",showValid:!0,rules:null,ajax:!0};this.options=a(this.defOptions,c);Object.defineProperties(this,{iClass:{get:function(){return this.options.cssPrefix?this.options.cssPrefix+this.options.incorrectClass:this.options.incorrectClass}},vClass:{get:function(){return this.options.cssPrefix?this.options.cssPrefix+this.options.correctClass:this.options.correctClass}}});Object.defineProperty(this,"form",{get:function(){return this.options.form}});Object.defineProperty(this,"reset",{value:function(){this.errors=[];this.unbindErrors()}});Object.defineProperty(this,"test",{value:function(){for(var f=this.options.rules,j=!0,g=0;g<f.length;g++){var i=f[g].rules,h;for(h in i){this["test"+h](f[g].element,f[g].name,i[h])||(j=!1)}}return j}});Object.defineProperty(this,"bindErrors",{value:function(){for(var d=0;d<this.errors.length;d++){var f=this.errors[d].element,e=this.iClass;f.classList?f.classList.add(e):f.className+=" "+e}}});Object.defineProperty(this,"unbindErrors",{value:function(){for(var e=this.form.querySelectorAll("."+this.iClass),g=0;g<e.length;g++){var i=e[g],h=this.iClass;i.classList?i.classList.remove(h):i.className=i.className.replace(" "+h,"")}}});Object.defineProperty(this,"bindEvents",{value:function(){var d=this;if(!(this.form&&this.form instanceof HTMLFormElement)){throw Error(" 'form' property in config object should be specified and should be instance of HTMLFormElement class")}this.form.addEventListener("submit",function(e){d.reset();d.options.ajax&&e.preventDefault();if(d.test()){d.options.onCorrect.call(d.form)}else{return d.bindErrors(),d.options.onIncorrect.call(d.form,d.errorsList),e.preventDefault(),e.stopPropagation(),!1}},!1)},configurable:!1,writable:!1});this.bindEvents()}Object.defineProperty(b.prototype,"testempty",{value:function(d,c){return d.value.length?!0:(this.errors.push({element:d,message:"Field '"+c+"' should be filled!"}),!1)}});Object.defineProperty(b.prototype,"testpattern",{value:function(e,d,f){return(new RegExp(f)).test(e.value)?!0:(this.errors.push({element:e,message:"The value of field '"+d+"' is incorrect!"}),!1)}});Object.defineProperty(b.prototype,"testmin",{value:function(e,d,f){return e.value.length<f?(this.errors.push({element:e,message:"The amount of characters in '"+d+"' field should be grater than "+f+"!"}),!1):!0}});Object.defineProperty(b.prototype,"errorsList",{get:function(){var c="";this.errors.forEach(function(e,g,f){c+=e.message+"\r\n"});return""===c?null:c}});return b}();